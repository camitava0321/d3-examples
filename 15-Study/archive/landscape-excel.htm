<!DOCTYPE html>
<meta charset="utf-8">
<meta name="author" content="Amitava Chakraborty">
<meta name="org" content="IBM">
<meta name="last-modified" content="04/10/2015">
<link rel="stylesheet" type="text/css" href="landscapeStyles.css">
<!-- The local version of d3 JS Library -->
<script src="d3.min.js"></script>

<!--This is for the fisheye view
<script type='text/javascript' src="http://bost.ocks.org/mike/fisheye/fisheye.js?0.0.3"> </script>
-->
<!-- For 
-- Image preview
-- Tabbed Div
-->
<script src="jquery.js" type="text/javascript"></script>
<!-- For Image preview -->
<script src="main.js" type="text/javascript"></script>

<!-- For Tabbed Div -->
<link rel="stylesheet" href="bootstrap.min.css">
<script src="bootstrap.min.js"></script>

 
<body>
<h2>Maersk Line Application Landscape</h2>
<script>
//Hides a popup
function hide(div) {
	document.getElementById(div).style.display = 'none';
}
//Function:Display application profile
function displayApplicationProfile(div,d) {
//Set the position of the div
document.getElementById(div).style.top='0%';
var left = width-$(".ontop").width();
document.getElementById(div).style.left=left+"px";
//Set the content of the msg to the created html text
document.getElementById('popupTitle').innerHTML="<h3 class=\"appTitle\">Application Profile : "+d.name+"("+d.id+")"+"</h3>";
//Set the content of the msg to the created html text
document.getElementById('appDesc').innerHTML=d.description;

var aodHTML="<b>Application Architeture Diagrams : </b>";
if (d.aodDiagrams!=null){
	for(var i = 0; i < d.aodDiagrams.length; i++) {
		var obj = d.aodDiagrams[i];
		aodHTML=aodHTML+
	"<a href=\""+obj.filename+"\" class=\"preview\"><img src=\""+obj.filename+"\" width=20 height=20 alt=\"AOD thumbnail\" /></a>&nbsp;"
	}
}
document.getElementById('aod').innerHTML=aodHTML;
console.log(document.getElementById('aod').innerHTML);

//Create the inner HTML for the application that was clicked



var innerHTMLText="<table class=\"appTable\">"+
"<tr>"+
"<td valign=\"top\" align=\"left\">"+
"Contact type"+
"</td>"+
"<td width=\"60%\" valign=\"top\" align=\"left\">"+
d.contactType+
"</td>"+
"</tr><tr>"+
"<td valign=\"top\" align=\"left\">"+
"Application Availability"+
"</td>"+
"<td valign=\"top\" align=\"left\">"+
d.availability+"<br>"+
"</td>"+
"</tr><tr>"+
"<td valign=\"top\" align=\"left\">"+
"Business Owners"+
"</td>"+
"<td valign=\"top\" align=\"left\">"+
d.businessOwners+"<br>"+
"</td>"+
"</tr><tr>"+
"<td valign=\"top\" align=\"left\">"+
"Technical  Contacts"+
"</td>"+
"<td valign=\"top\" align=\"left\">"+
d.technicalContacts+"<br>"+
"</td>"+
"</tr><tr>"+
"<td valign=\"top\" align=\"left\">"+
"Technology Stack"+
"</td>"+
"<td valign=\"top\" align=\"left\">"+
d.technologyStack+"<br>"+
"</td>"+
"</tr><tr>"+
"<td valign=\"top\" align=\"left\">"+
"Servers"+
"</td>"+
"<td valign=\"top\" align=\"left\">"+
d.servers+"<br>"+
"</td>"+
"</tr><tr>"+
"<td valign=\"top\" align=\"left\">"+
"Interfaces"+
"</td>"+
"<td valign=\"top\" align=\"left\">"+
d.interfaces+"<br>"+
"</td>"+
"</tr><tr>"+
"<td valign=\"top\" align=\"left\">"+
"Remarks"+
"</td>"+
"<td valign=\"top\" align=\"left\">"+
d.remarks+"<br>"+
"</td>"+
"</tr><tr>"+
"<td valign=\"top\" align=\"left\">"+
"Status"+
"</td>"+
"<td valign=\"top\" align=\"left\">"+
d.status+"<br>"+
"</td>"+
"</tr><tr>"+
"<td valign=\"top\" align=\"left\">"+
"Portfolio"+
"</td>"+
"<td valign=\"top\" align=\"left\">"+
d.portfolio+"<br>"+
"</td>"+
"</tr>"+
"</table>";
/*
var innerHTMLText="<p>"+
"Application id : "+d.id+"<br>"+
"Description : "+d.description+"<br>"+
"Remarks : "+d.remarks+"<br>"+
"Status : "+d.status+"<br>"+
"Contact type : "+d.contactType+"<br>"+
"Application Availability : "+d.availability+"<br>"+
"Business Owners : "+d.businessOwners+"<br>"+
"Technical  Contacts : "+d.technicalContacts+"<br>"+
"Technology Stack : "+d.technologyStack+"<br>"+
"Servers : "+d.servers+"<br>"+
"Interfaces : "+d.interfaces+"<br>"+
"Portfolio : "+d.portfolio+"<br>"+"</p>";
*/

//Show the div
document.getElementById(div).style.display = 'block';
//Set the content of the msg to the created html text
document.getElementById('msg').innerHTML=innerHTMLText;
}
</script>

<script>
//Width and height of the screen
var width = window.innerWidth || document.documentElement.clientWidth|| document.body.clientWidth;
var height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;

//Color of the nodes(applications) - set according to the portfolios
//Either choose a standard d3 specified color category (here 20 colors)
//var color = d3.scale.category20();
//Or set the colors the way you want
var color = d3.scale.ordinal()
  .domain(["1",      "2",       "3",       "4",       "5",       "6",       "7",       "8",       "9"])			//the portfolios.
  .range(["#5CB8E6", "#E65C8A", "#FFFF00", "#00FF00", "#FFFF00", "#FF7F00", "#FF0000", "#888888", "#888888"]);	//and the corresponding colors

//Setup the Force Layout  
var force = d3.layout.force()
    .charge(-10)
    .linkDistance(150)
    .size([width, height]);

//Append a Standard Vector Graphics container
var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

//data set file is read and the entire json data is put in the variable graph.	
d3.json("landscape-excel.json", function(error, graph) {
  if (error) {
	console.log (error);  	//print error
	throw error;			//throw error
  }

//Set nodes and edges to the force layout  
  force
      .nodes(graph.applications)
      .links(graph.interactions)
      .start();

//Append the links one by one
  var link = svg.selectAll(".link")
      .data(graph.interactions)
    .enter().append("line")		//for-each data append a line
      .attr("class", "link")	//set the HTML5 attribute of the CSS object .link
  	  .on('click', function(d){displayInteractionProfile('applicationProfile',d);}) //AMC:For click-to-fade
      .style("stroke-width", 1)
	  .style("marker-end",  "url(#suit)"); // To draw the arrow heads 
//      .style("stroke-width", function(d) { return Math.sqrt(d.value);}) ;

//Function:Display interaction profile
function displayInteractionProfile(div,d){
//Set the content of the msg to the created html text
document.getElementById('popupTitle').innerHTML="<h3>Interaction Details</h3>";
//Create the inner HTML for the interaction link that was clicked
var innerHTMLText="<p>"+
"interactionVehicle: "+d.interactionVehicle+"<br>"+
"interfaceSchedule: "+d.interfaceSchedule+"<br>"+
"triggerType: "+d.triggerType+"<br>"+
"payloadTemplateId: "+d.payloadTemplateId+"<br>"+
"informationLifecycle: "+d.informationLifecycle+"<br>"+
"interfaceEvent: "+d.interfaceEvent+"<br>"+
"messageType: "+d.messageType+"<br>"+
"alert: "+d.alert+"<br>"+
"remarks: "+d.remarks+"<br>"+"</p>";

//Set the position of the div
//document.getElementById(div).style.top='20px';
//document.getElementById(div).style.left='850px';

//Show the div
document.getElementById(div).style.display = 'block';
//Set the content of the msg to the created html text
document.getElementById('msg').innerHTML=innerHTMLText;
}


//To detect escape button : 'Esc' hit will hide the application/interaction popup
document.onkeydown = function(evt) {
	evt = evt || window.event;
	if (evt.keyCode == 27) {
		hide('applicationProfile');
	}
};


//Append the nodes/applications one by one
  var node = svg.selectAll(".node")
      .data(graph.applications,function(d) { return d.id; })
    .enter().append("g")	//g is the graphics-container to hold the shape(circle) and the text within it
      .attr("class", "node")
      .call(force.drag)
	  ;
//Add a circle to the graphics-container g for each node
  var circleNode = node.append("circle")
      .attr("r", function(d){d.radius=5+d.name.length*3; return d.radius;})
      .style("fill", function(d) { return color(d.portfolio); })
  	  .on('click', function(d){displayApplicationProfile('applicationProfile',d);}) //AMC:For click-to-fade
  	  .on('dblclick', connectedNodes) //AMC:For doubleclick-to-fade
	  
	  ;
//Add a text to the graphics-container g for each node
	node.append("text")
		.attr("dx", function(d){return -d.radius/2})
		.attr("dy", ".35em")
		.style("stroke","black")
		.text(function(d){return d.name});
	  
//Add tooltip text to each node
  node.append("title")
      .text(function(d) { return d.name; });
//Add tooltip text to each link
  link.append("title")
      .text(function(d) { return (
"interactionVehicle: "+d.interactionVehicle+
"interfaceSchedule: "+d.interactionVehicle+
"triggerType: "+d.interactionVehicle+
"payloadTemplateId: "+d.interactionVehicle+
"informationLifecycle: "+d.interactionVehicle+
"interfaceEvent: "+d.interactionVehicle+
"messageType: "+d.interactionVehicle+
"alert: "+d.interactionVehicle+
"remarks: "+d.interactionVehicle); });


//Force Layout parameters setup
  force.on("tick", function() {
    link.attr("x1", function(d) { return d.source.x; })
        .attr("y1", function(d) { return d.source.y; })
        .attr("x2", function(d) { return d.target.x; })
        .attr("y2", function(d) { return d.target.y; });

d3.selectAll("circle").attr("cx", function (d) {
        return d.x;
    })
        .attr("cy", function (d) {
        return d.y;
    });
    d3.selectAll("text").attr("x", function (d) {
        return d.x;
    })
        .attr("y", function (d) {
        return d.y;
    });
	
//    node.attr("cx", function(d) { return d.x; })
//        .attr("cy", function(d) { return d.y; });
	 node.each(collide(.5)); //Added so that the nodes stayed apart from each other
  });


//Append arrow-head markers to the links where a directional attribute is available  
svg.append("defs").selectAll("marker")
    .data(["suit", "licensing", "resolved"])
  .enter().append("marker")
    .attr("id", function(d) { console.log(d); return d; })
    .attr("viewBox", "0 -5 10 10")
    .attr("refX", 75)
    .attr("refY", 0)
    .attr("markerWidth", 5)
    .attr("markerHeight", 5)
    .attr("orient", "auto")
  .append("path")
    .attr("d", "M0,-5 L10,0 L0,5")
	.style("fill","#777777")
    .style("stroke", "#777777")
    .style("opacity", "1");

//Code piece to keep the application nodes separate from each-other	
var padding = 5, // separation between circles
    radius=8;
function collide(alpha) {
  var quadtree = d3.geom.quadtree(graph.applications);
  return function(d) {
    var rb = 2*d.radius + padding,
        nx1 = d.x - rb,
        nx2 = d.x + rb,
        ny1 = d.y - rb,
        ny2 = d.y + rb;
    quadtree.visit(function(quad, x1, y1, x2, y2) {
      if (quad.point && (quad.point !== d)) {
        var x = d.x - quad.point.x,
            y = d.y - quad.point.y,
            l = Math.sqrt(x * x + y * y);
          if (l < rb) {
          l = (l - rb) / l * alpha;
          d.x -= x *= l;
          d.y -= y *= l;
          quad.point.x += x;
          quad.point.y += y;
        }
      }
      return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;
    });
  };
}
	
/*	
//AMC:This is for the fisheye view - Start
var fisheye = d3.fisheye.circular()
      .radius(120);
	  console.log(fisheye);
svg.on("mousemove", function() {
      force.stop();
      fisheye.focus(d3.mouse(this));
      d3.selectAll("circle").each(function(d) { d.fisheye = fisheye(d); })
          .attr("cx", function(d) { return d.fisheye.x; })
          .attr("cy", function(d) { return d.fisheye.y; })
          .attr("r", function(d) { return d.fisheye.z * 8; });
      link.attr("x1", function(d) { return d.source.fisheye.x; })
          .attr("y1", function(d) { return d.source.fisheye.y; })
          .attr("x2", function(d) { return d.target.fisheye.x; })
          .attr("y2", function(d) { return d.target.fisheye.y; });
    });  
//AMC:This is for the fisheye view - End
*/	


//AMC:This is for the doubleclick-to-fade - Start
//Toggle stores whether the highlighting is on
var toggle = 0;
//Create an array logging what is connected to what
var linkedByIndex = {};
for (i = 0; i < graph.applications.length; i++) {
    linkedByIndex[i + "," + i] = 1;
};
graph.interactions.forEach(function (d) {
    linkedByIndex[d.source.index + "," + d.target.index] = 1;
});
//This function looks up whether a pair are neighbours
function neighboring(a, b) {
    return linkedByIndex[a.index + "," + b.index];
}
function connectedNodes() {
    if (toggle == 0) {
        //Reduce the opacity of all but the neighbouring nodes
        d = d3.select(this).node().__data__;
        node.style("opacity", function (o) {
            return neighboring(d, o) | neighboring(o, d) ? 1 : 0.1;
        });
        link.style("opacity", function (o) {
            return d.index==o.source.index | d.index==o.target.index ? 1 : 0.1;
        });
        //Reduce the op
        toggle = 1;
    } else {
        //Put them back to opacity=1
        node.style("opacity", 1);
        link.style("opacity", 1);
        toggle = 0;
    }
}	
//AMC:This is for the doubleclick-to-fade - End

/* Add drag & zoom behaviours  - not working yet*/
/* Yet to write the functions dragmove and dragzoom */
    svg.call( d3.behavior.drag()
	      .on("drag",dragmove) );
    svg.call( d3.behavior.zoom()
	      .x(xScale)
	      .y(yScale)
	      .scaleExtent([1, 6])
	      .on("zoom", doZoom) );
});


<!-- Set the background style -->
d3.select("body").style("background-color", "#000020")
d3.select("body").style("color", "#AA9999")
</script>
<!-- Div/Placeholder to show the Interaction Profile Window -->
<div id="interactionProfile"><div>
<!-- Div/Placeholder to show the Application Profile Window -->
<div id="applicationProfile" class="ontop">

<table id="popup" border="0">
	<tr>
		<td style="padding-left:5px" width="80%" valign="bottom" align="left">
&nbsp;&nbsp;<p id="popupTitle">abc</p>
		</td>
		<td valign="top" align="right" style="padding:5px" >
<img id="close" src="close-circle-512.png" width=20 height=20 onclick ="hide('applicationProfile')">
		</td>
	</tr>
	<tr colspan=2>
		<td style="padding-left:5px" width="100%" valign="top" align="left">
&nbsp;&nbsp;<p id="appDesc" class="appDesc" align="justify">abc</p>
<div id="aod"></div>  
<p>  
<b>Application Architeture Diagrams : </b><a href="IFS-AOD1.png" class="preview"><img src="IFS-AOD1.png" alt="AOD thumbnail" height="20" width="20"></a>&nbsp;<a href="IFS-AOD2.png" class="preview"><img src="IFS-AOD2.png" alt="AOD thumbnail" height="20" width="20"></a>&nbsp;<a href="IFS-AOD3.png" class="preview"><img src="IFS-AOD3.png" alt="AOD thumbnail" height="20" width="20"></a>&nbsp;<a href="IFS-AOD4.png" class="preview"><img src="IFS-AOD4.png" alt="AOD thumbnail" height="20" width="20"></a>&nbsp;
</p>
		</td>
	</tr>
	<tr colspan=2>
		<td style="padding-left:5px" width="100%" valign="top" align="left">
&nbsp;&nbsp;<p id="msg">abc</p>
		</td>
	</tr>
</table>
</div>

<!-- Set the background logo placeholders -->
<div class="ibm">
<img src="ibm_logo.gif" width=100 height=50/>
</div>
<div class="maersk">
<img src="Maersk_logo.png" width=70 height=63/>
</div>

</body>
</script>